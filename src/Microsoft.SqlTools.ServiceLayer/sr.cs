// WARNING:
// This file was generated by the Microsoft DataWarehouse String Resource Tool 1.37.0.0
// from information in sr.strings
// DO NOT MODIFY THIS FILE'S CONTENTS, THEY WILL BE OVERWRITTEN
//
namespace Microsoft.SqlTools.ServiceLayer
{
    using System;
    using System.Reflection;
    using System.Resources;
    using System.Globalization;

    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SR
    {
        protected SR()
        { }

        public static CultureInfo Culture
        {
            get
            {
                return Keys.Culture;
            }
            set
            {
                Keys.Culture = value;
            }
        }


        public static string ConnectionServiceConnectErrorNullParams
        {
            get
            {
                return Keys.GetString(Keys.ConnectionServiceConnectErrorNullParams);
            }
        }

        public static string ConnectionServiceListDbErrorNullOwnerUri
        {
            get
            {
                return Keys.GetString(Keys.ConnectionServiceListDbErrorNullOwnerUri);
            }
        }

        public static string ConnectionServiceConnectionCanceled
        {
            get
            {
                return Keys.GetString(Keys.ConnectionServiceConnectionCanceled);
            }
        }

        public static string ConnectionParamsValidateNullOwnerUri
        {
            get
            {
                return Keys.GetString(Keys.ConnectionParamsValidateNullOwnerUri);
            }
        }

        public static string ConnectionParamsValidateNullConnection
        {
            get
            {
                return Keys.GetString(Keys.ConnectionParamsValidateNullConnection);
            }
        }

        public static string ConnectionParamsValidateNullServerName
        {
            get
            {
                return Keys.GetString(Keys.ConnectionParamsValidateNullServerName);
            }
        }

        public static string CredentialsServiceInvalidCriticalHandle
        {
            get
            {
                return Keys.GetString(Keys.CredentialsServiceInvalidCriticalHandle);
            }
        }

        public static string CredentialsServicePasswordLengthExceeded
        {
            get
            {
                return Keys.GetString(Keys.CredentialsServicePasswordLengthExceeded);
            }
        }

        public static string CredentialsServiceTargetForDelete
        {
            get
            {
                return Keys.GetString(Keys.CredentialsServiceTargetForDelete);
            }
        }

        public static string CredentialsServiceTargetForLookup
        {
            get
            {
                return Keys.GetString(Keys.CredentialsServiceTargetForLookup);
            }
        }

        public static string CredentialServiceWin32CredentialDisposed
        {
            get
            {
                return Keys.GetString(Keys.CredentialServiceWin32CredentialDisposed);
            }
        }

        public static string ServiceAlreadyRegistered
        {
            get
            {
                return Keys.GetString(Keys.ServiceAlreadyRegistered);
            }
        }

        public static string MultipleServicesFound
        {
            get
            {
                return Keys.GetString(Keys.MultipleServicesFound);
            }
        }

        public static string IncompatibleServiceForExtensionLoader
        {
            get
            {
                return Keys.GetString(Keys.IncompatibleServiceForExtensionLoader);
            }
        }

        public static string ServiceProviderNotSet
        {
            get
            {
                return Keys.GetString(Keys.ServiceProviderNotSet);
            }
        }

        public static string ServiceNotFound
        {
            get
            {
                return Keys.GetString(Keys.ServiceNotFound);
            }
        }

        public static string ServiceNotOfExpectedType
        {
            get
            {
                return Keys.GetString(Keys.ServiceNotOfExpectedType);
            }
        }

        public static string ErrorUnexpectedCodeObjectType
        {
            get
            {
                return Keys.GetString(Keys.ErrorUnexpectedCodeObjectType);
            }
        }

        public static string HostingUnexpectedEndOfStream
        {
            get
            {
                return Keys.GetString(Keys.HostingUnexpectedEndOfStream);
            }
        }

        public static string HostingHeaderMissingColon
        {
            get
            {
                return Keys.GetString(Keys.HostingHeaderMissingColon);
            }
        }

        public static string HostingHeaderMissingContentLengthHeader
        {
            get
            {
                return Keys.GetString(Keys.HostingHeaderMissingContentLengthHeader);
            }
        }

        public static string HostingHeaderMissingContentLengthValue
        {
            get
            {
                return Keys.GetString(Keys.HostingHeaderMissingContentLengthValue);
            }
        }

        public static string QueryServiceCancelAlreadyCompleted
        {
            get
            {
                return Keys.GetString(Keys.QueryServiceCancelAlreadyCompleted);
            }
        }

        public static string QueryServiceCancelDisposeFailed
        {
            get
            {
                return Keys.GetString(Keys.QueryServiceCancelDisposeFailed);
            }
        }

        public static string QueryServiceQueryCancelled
        {
            get
            {
                return Keys.GetString(Keys.QueryServiceQueryCancelled);
            }
        }

        public static string QueryServiceSubsetBatchNotCompleted
        {
            get
            {
                return Keys.GetString(Keys.QueryServiceSubsetBatchNotCompleted);
            }
        }

        public static string QueryServiceSubsetBatchOutOfRange
        {
            get
            {
                return Keys.GetString(Keys.QueryServiceSubsetBatchOutOfRange);
            }
        }

        public static string QueryServiceSubsetResultSetOutOfRange
        {
            get
            {
                return Keys.GetString(Keys.QueryServiceSubsetResultSetOutOfRange);
            }
        }

        public static string QueryServiceDataReaderByteCountInvalid
        {
            get
            {
                return Keys.GetString(Keys.QueryServiceDataReaderByteCountInvalid);
            }
        }

        public static string QueryServiceDataReaderCharCountInvalid
        {
            get
            {
                return Keys.GetString(Keys.QueryServiceDataReaderCharCountInvalid);
            }
        }

        public static string QueryServiceDataReaderXmlCountInvalid
        {
            get
            {
                return Keys.GetString(Keys.QueryServiceDataReaderXmlCountInvalid);
            }
        }

        public static string QueryServiceFileWrapperWriteOnly
        {
            get
            {
                return Keys.GetString(Keys.QueryServiceFileWrapperWriteOnly);
            }
        }

        public static string QueryServiceFileWrapperNotInitialized
        {
            get
            {
                return Keys.GetString(Keys.QueryServiceFileWrapperNotInitialized);
            }
        }

        public static string QueryServiceFileWrapperReadOnly
        {
            get
            {
                return Keys.GetString(Keys.QueryServiceFileWrapperReadOnly);
            }
        }

        public static string QueryServiceAffectedOneRow
        {
            get
            {
                return Keys.GetString(Keys.QueryServiceAffectedOneRow);
            }
        }

        public static string QueryServiceCompletedSuccessfully
        {
            get
            {
                return Keys.GetString(Keys.QueryServiceCompletedSuccessfully);
            }
        }

        public static string QueryServiceColumnNull
        {
            get
            {
                return Keys.GetString(Keys.QueryServiceColumnNull);
            }
        }

        public static string QueryServiceRequestsNoQuery
        {
            get
            {
                return Keys.GetString(Keys.QueryServiceRequestsNoQuery);
            }
        }

        public static string QueryServiceQueryInvalidOwnerUri
        {
            get
            {
                return Keys.GetString(Keys.QueryServiceQueryInvalidOwnerUri);
            }
        }

        public static string QueryServiceQueryInProgress
        {
            get
            {
                return Keys.GetString(Keys.QueryServiceQueryInProgress);
            }
        }

        public static string QueryServiceMessageSenderNotSql
        {
            get
            {
                return Keys.GetString(Keys.QueryServiceMessageSenderNotSql);
            }
        }

        public static string QueryServiceResultSetReaderNull
        {
            get
            {
                return Keys.GetString(Keys.QueryServiceResultSetReaderNull);
            }
        }

        public static string QueryServiceSaveAsResultSetNotComplete
        {
            get
            {
                return Keys.GetString(Keys.QueryServiceSaveAsResultSetNotComplete);
            }
        }

        public static string QueryServiceSaveAsMiscStartingError
        {
            get
            {
                return Keys.GetString(Keys.QueryServiceSaveAsMiscStartingError);
            }
        }

        public static string QueryServiceSaveAsInProgress
        {
            get
            {
                return Keys.GetString(Keys.QueryServiceSaveAsInProgress);
            }
        }

        public static string QueryServiceResultSetNotRead
        {
            get
            {
                return Keys.GetString(Keys.QueryServiceResultSetNotRead);
            }
        }

        public static string QueryServiceResultSetStartRowOutOfRange
        {
            get
            {
                return Keys.GetString(Keys.QueryServiceResultSetStartRowOutOfRange);
            }
        }

        public static string QueryServiceResultSetRowCountOutOfRange
        {
            get
            {
                return Keys.GetString(Keys.QueryServiceResultSetRowCountOutOfRange);
            }
        }

        public static string QueryServiceResultSetNoColumnSchema
        {
            get
            {
                return Keys.GetString(Keys.QueryServiceResultSetNoColumnSchema);
            }
        }

        public static string QueryServiceExecutionPlanNotFound
        {
            get
            {
                return Keys.GetString(Keys.QueryServiceExecutionPlanNotFound);
            }
        }

        public static string PeekDefinitionNoResultsError
        {
            get
            {
                return Keys.GetString(Keys.PeekDefinitionNoResultsError);
            }
        }

        public static string PeekDefinitionDatabaseError
        {
            get
            {
                return Keys.GetString(Keys.PeekDefinitionDatabaseError);
            }
        }

        public static string PeekDefinitionNotConnectedError
        {
            get
            {
                return Keys.GetString(Keys.PeekDefinitionNotConnectedError);
            }
        }

        public static string PeekDefinitionTimedoutError
        {
            get
            {
                return Keys.GetString(Keys.PeekDefinitionTimedoutError);
            }
        }

        public static string PeekDefinitionTypeNotSupportedError
        {
            get
            {
                return Keys.GetString(Keys.PeekDefinitionTypeNotSupportedError);
            }
        }

        public static string ErrorEmptyStringReplacement
        {
            get
            {
                return Keys.GetString(Keys.ErrorEmptyStringReplacement);
            }
        }

        public static string WorkspaceServicePositionLineOutOfRange
        {
            get
            {
                return Keys.GetString(Keys.WorkspaceServicePositionLineOutOfRange);
            }
        }

        public static string EE_BatchSqlMessageNoProcedureInfo
        {
            get
            {
                return Keys.GetString(Keys.EE_BatchSqlMessageNoProcedureInfo);
            }
        }

        public static string EE_BatchSqlMessageWithProcedureInfo
        {
            get
            {
                return Keys.GetString(Keys.EE_BatchSqlMessageWithProcedureInfo);
            }
        }

        public static string EE_BatchSqlMessageNoLineInfo
        {
            get
            {
                return Keys.GetString(Keys.EE_BatchSqlMessageNoLineInfo);
            }
        }

        public static string EE_BatchError_Exception
        {
            get
            {
                return Keys.GetString(Keys.EE_BatchError_Exception);
            }
        }

        public static string EE_BatchExecutionInfo_RowsAffected
        {
            get
            {
                return Keys.GetString(Keys.EE_BatchExecutionInfo_RowsAffected);
            }
        }

        public static string EE_ExecutionNotYetCompleteError
        {
            get
            {
                return Keys.GetString(Keys.EE_ExecutionNotYetCompleteError);
            }
        }

        public static string EE_ScriptError_Error
        {
            get
            {
                return Keys.GetString(Keys.EE_ScriptError_Error);
            }
        }

        public static string EE_ScriptError_ParsingSyntax
        {
            get
            {
                return Keys.GetString(Keys.EE_ScriptError_ParsingSyntax);
            }
        }

        public static string EE_ScriptError_FatalError
        {
            get
            {
                return Keys.GetString(Keys.EE_ScriptError_FatalError);
            }
        }

        public static string EE_ExecutionInfo_FinalizingLoop
        {
            get
            {
                return Keys.GetString(Keys.EE_ExecutionInfo_FinalizingLoop);
            }
        }

        public static string EE_ExecutionInfo_QueryCancelledbyUser
        {
            get
            {
                return Keys.GetString(Keys.EE_ExecutionInfo_QueryCancelledbyUser);
            }
        }

        public static string EE_BatchExecutionError_Halting
        {
            get
            {
                return Keys.GetString(Keys.EE_BatchExecutionError_Halting);
            }
        }

        public static string EE_BatchExecutionError_Ignoring
        {
            get
            {
                return Keys.GetString(Keys.EE_BatchExecutionError_Ignoring);
            }
        }

        public static string EE_ExecutionInfo_InitilizingLoop
        {
            get
            {
                return Keys.GetString(Keys.EE_ExecutionInfo_InitilizingLoop);
            }
        }

        public static string EE_ExecutionError_CommandNotSupported
        {
            get
            {
                return Keys.GetString(Keys.EE_ExecutionError_CommandNotSupported);
            }
        }

        public static string EE_ExecutionError_VariableNotFound
        {
            get
            {
                return Keys.GetString(Keys.EE_ExecutionError_VariableNotFound);
            }
        }

        public static string BatchParserWrapperExecutionEngineError
        {
            get
            {
                return Keys.GetString(Keys.BatchParserWrapperExecutionEngineError);
            }
        }

        public static string BatchParserWrapperExecutionError
        {
            get
            {
                return Keys.GetString(Keys.BatchParserWrapperExecutionError);
            }
        }

        public static string BatchParserWrapperExecutionEngineBatchMessage
        {
            get
            {
                return Keys.GetString(Keys.BatchParserWrapperExecutionEngineBatchMessage);
            }
        }

        public static string BatchParserWrapperExecutionEngineBatchResultSetProcessing
        {
            get
            {
                return Keys.GetString(Keys.BatchParserWrapperExecutionEngineBatchResultSetProcessing);
            }
        }

        public static string BatchParserWrapperExecutionEngineBatchResultSetFinished
        {
            get
            {
                return Keys.GetString(Keys.BatchParserWrapperExecutionEngineBatchResultSetFinished);
            }
        }

        public static string BatchParserWrapperExecutionEngineBatchCancelling
        {
            get
            {
                return Keys.GetString(Keys.BatchParserWrapperExecutionEngineBatchCancelling);
            }
        }

        public static string EE_ScriptError_Warning
        {
            get
            {
                return Keys.GetString(Keys.EE_ScriptError_Warning);
            }
        }

        public static string TroubleshootingAssistanceMessage
        {
            get
            {
                return Keys.GetString(Keys.TroubleshootingAssistanceMessage);
            }
        }

        public static string BatchParser_CircularReference
        {
            get
            {
                return Keys.GetString(Keys.BatchParser_CircularReference);
            }
        }

        public static string BatchParser_CommentNotTerminated
        {
            get
            {
                return Keys.GetString(Keys.BatchParser_CommentNotTerminated);
            }
        }

        public static string BatchParser_StringNotTerminated
        {
            get
            {
                return Keys.GetString(Keys.BatchParser_StringNotTerminated);
            }
        }

        public static string BatchParser_IncorrectSyntax
        {
            get
            {
                return Keys.GetString(Keys.BatchParser_IncorrectSyntax);
            }
        }

        public static string BatchParser_VariableNotDefined
        {
            get
            {
                return Keys.GetString(Keys.BatchParser_VariableNotDefined);
            }
        }

        public static string TestLocalizationConstant
        {
            get
            {
                return Keys.GetString(Keys.TestLocalizationConstant);
            }
        }

        public static string ConnectionServiceListDbErrorNotConnected(string uri)
        {
            return Keys.GetString(Keys.ConnectionServiceListDbErrorNotConnected, uri);
        }

        public static string ConnectionServiceConnStringInvalidAuthType(string authType)
        {
            return Keys.GetString(Keys.ConnectionServiceConnStringInvalidAuthType, authType);
        }

        public static string ConnectionServiceConnStringInvalidIntent(string intent)
        {
            return Keys.GetString(Keys.ConnectionServiceConnStringInvalidIntent, intent);
        }

        public static string ConnectionParamsValidateNullSqlAuth(string component)
        {
            return Keys.GetString(Keys.ConnectionParamsValidateNullSqlAuth, component);
        }

        public static string QueryServiceAffectedRows(long rows)
        {
            return Keys.GetString(Keys.QueryServiceAffectedRows, rows);
        }

        public static string QueryServiceErrorFormat(int msg, int lvl, int state, int line, string newLine, string message)
        {
            return Keys.GetString(Keys.QueryServiceErrorFormat, msg, lvl, state, line, newLine, message);
        }

        public static string QueryServiceQueryFailed(string message)
        {
            return Keys.GetString(Keys.QueryServiceQueryFailed, message);
        }

        public static string QueryServiceSaveAsFail(string fileName, string message)
        {
            return Keys.GetString(Keys.QueryServiceSaveAsFail, fileName, message);
        }

        public static string PeekDefinitionAzureError(string errorMessage)
        {
            return Keys.GetString(Keys.PeekDefinitionAzureError, errorMessage);
        }

        public static string PeekDefinitionError(string errorMessage)
        {
            return Keys.GetString(Keys.PeekDefinitionError, errorMessage);
        }

        public static string WorkspaceServicePositionColumnOutOfRange(int line)
        {
            return Keys.GetString(Keys.WorkspaceServicePositionColumnOutOfRange, line);
        }

        public static string WorkspaceServiceBufferPositionOutOfOrder(int sLine, int sCol, int eLine, int eCol)
        {
            return Keys.GetString(Keys.WorkspaceServiceBufferPositionOutOfOrder, sLine, sCol, eLine, eCol);
        }

        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class Keys
        {
            static ResourceManager resourceManager = new ResourceManager("Microsoft.SqlTools.ServiceLayer.SR", typeof(SR).GetTypeInfo().Assembly);

            static CultureInfo _culture = null;


            public const string ConnectionServiceConnectErrorNullParams = "ConnectionServiceConnectErrorNullParams";


            public const string ConnectionServiceListDbErrorNullOwnerUri = "ConnectionServiceListDbErrorNullOwnerUri";


            public const string ConnectionServiceListDbErrorNotConnected = "ConnectionServiceListDbErrorNotConnected";


            public const string ConnectionServiceConnStringInvalidAuthType = "ConnectionServiceConnStringInvalidAuthType";


            public const string ConnectionServiceConnStringInvalidIntent = "ConnectionServiceConnStringInvalidIntent";


            public const string ConnectionServiceConnectionCanceled = "ConnectionServiceConnectionCanceled";


            public const string ConnectionParamsValidateNullOwnerUri = "ConnectionParamsValidateNullOwnerUri";


            public const string ConnectionParamsValidateNullConnection = "ConnectionParamsValidateNullConnection";


            public const string ConnectionParamsValidateNullServerName = "ConnectionParamsValidateNullServerName";


            public const string ConnectionParamsValidateNullSqlAuth = "ConnectionParamsValidateNullSqlAuth";


            public const string CredentialsServiceInvalidCriticalHandle = "CredentialsServiceInvalidCriticalHandle";


            public const string CredentialsServicePasswordLengthExceeded = "CredentialsServicePasswordLengthExceeded";


            public const string CredentialsServiceTargetForDelete = "CredentialsServiceTargetForDelete";


            public const string CredentialsServiceTargetForLookup = "CredentialsServiceTargetForLookup";


            public const string CredentialServiceWin32CredentialDisposed = "CredentialServiceWin32CredentialDisposed";


            public const string ServiceAlreadyRegistered = "ServiceAlreadyRegistered";


            public const string MultipleServicesFound = "MultipleServicesFound";


            public const string IncompatibleServiceForExtensionLoader = "IncompatibleServiceForExtensionLoader";


            public const string ServiceProviderNotSet = "ServiceProviderNotSet";


            public const string ServiceNotFound = "ServiceNotFound";


            public const string ServiceNotOfExpectedType = "ServiceNotOfExpectedType";


            public const string ErrorUnexpectedCodeObjectType = "ErrorUnexpectedCodeObjectType";


            public const string HostingUnexpectedEndOfStream = "HostingUnexpectedEndOfStream";


            public const string HostingHeaderMissingColon = "HostingHeaderMissingColon";


            public const string HostingHeaderMissingContentLengthHeader = "HostingHeaderMissingContentLengthHeader";


            public const string HostingHeaderMissingContentLengthValue = "HostingHeaderMissingContentLengthValue";


            public const string QueryServiceCancelAlreadyCompleted = "QueryServiceCancelAlreadyCompleted";


            public const string QueryServiceCancelDisposeFailed = "QueryServiceCancelDisposeFailed";


            public const string QueryServiceQueryCancelled = "QueryServiceQueryCancelled";


            public const string QueryServiceSubsetBatchNotCompleted = "QueryServiceSubsetBatchNotCompleted";


            public const string QueryServiceSubsetBatchOutOfRange = "QueryServiceSubsetBatchOutOfRange";


            public const string QueryServiceSubsetResultSetOutOfRange = "QueryServiceSubsetResultSetOutOfRange";


            public const string QueryServiceDataReaderByteCountInvalid = "QueryServiceDataReaderByteCountInvalid";


            public const string QueryServiceDataReaderCharCountInvalid = "QueryServiceDataReaderCharCountInvalid";


            public const string QueryServiceDataReaderXmlCountInvalid = "QueryServiceDataReaderXmlCountInvalid";


            public const string QueryServiceFileWrapperWriteOnly = "QueryServiceFileWrapperWriteOnly";


            public const string QueryServiceFileWrapperNotInitialized = "QueryServiceFileWrapperNotInitialized";


            public const string QueryServiceFileWrapperReadOnly = "QueryServiceFileWrapperReadOnly";


            public const string QueryServiceAffectedOneRow = "QueryServiceAffectedOneRow";


            public const string QueryServiceAffectedRows = "QueryServiceAffectedRows";


            public const string QueryServiceCompletedSuccessfully = "QueryServiceCompletedSuccessfully";


            public const string QueryServiceErrorFormat = "QueryServiceErrorFormat";


            public const string QueryServiceQueryFailed = "QueryServiceQueryFailed";


            public const string QueryServiceColumnNull = "QueryServiceColumnNull";


            public const string QueryServiceRequestsNoQuery = "QueryServiceRequestsNoQuery";


            public const string QueryServiceQueryInvalidOwnerUri = "QueryServiceQueryInvalidOwnerUri";


            public const string QueryServiceQueryInProgress = "QueryServiceQueryInProgress";


            public const string QueryServiceMessageSenderNotSql = "QueryServiceMessageSenderNotSql";


            public const string QueryServiceResultSetReaderNull = "QueryServiceResultSetReaderNull";


            public const string QueryServiceSaveAsResultSetNotComplete = "QueryServiceSaveAsResultSetNotComplete";


            public const string QueryServiceSaveAsMiscStartingError = "QueryServiceSaveAsMiscStartingError";


            public const string QueryServiceSaveAsInProgress = "QueryServiceSaveAsInProgress";


            public const string QueryServiceSaveAsFail = "QueryServiceSaveAsFail";


            public const string QueryServiceResultSetNotRead = "QueryServiceResultSetNotRead";


            public const string QueryServiceResultSetStartRowOutOfRange = "QueryServiceResultSetStartRowOutOfRange";


            public const string QueryServiceResultSetRowCountOutOfRange = "QueryServiceResultSetRowCountOutOfRange";


            public const string QueryServiceResultSetNoColumnSchema = "QueryServiceResultSetNoColumnSchema";


            public const string QueryServiceExecutionPlanNotFound = "QueryServiceExecutionPlanNotFound";


            public const string PeekDefinitionAzureError = "PeekDefinitionAzureError";


            public const string PeekDefinitionError = "PeekDefinitionError";


            public const string PeekDefinitionNoResultsError = "PeekDefinitionNoResultsError";


            public const string PeekDefinitionDatabaseError = "PeekDefinitionDatabaseError";


            public const string PeekDefinitionNotConnectedError = "PeekDefinitionNotConnectedError";


            public const string PeekDefinitionTimedoutError = "PeekDefinitionTimedoutError";


            public const string PeekDefinitionTypeNotSupportedError = "PeekDefinitionTypeNotSupportedError";


            public const string ErrorEmptyStringReplacement = "ErrorEmptyStringReplacement";


            public const string WorkspaceServicePositionLineOutOfRange = "WorkspaceServicePositionLineOutOfRange";


            public const string WorkspaceServicePositionColumnOutOfRange = "WorkspaceServicePositionColumnOutOfRange";


            public const string WorkspaceServiceBufferPositionOutOfOrder = "WorkspaceServiceBufferPositionOutOfOrder";


            public const string EE_BatchSqlMessageNoProcedureInfo = "EE_BatchSqlMessageNoProcedureInfo";


            public const string EE_BatchSqlMessageWithProcedureInfo = "EE_BatchSqlMessageWithProcedureInfo";


            public const string EE_BatchSqlMessageNoLineInfo = "EE_BatchSqlMessageNoLineInfo";


            public const string EE_BatchError_Exception = "EE_BatchError_Exception";


            public const string EE_BatchExecutionInfo_RowsAffected = "EE_BatchExecutionInfo_RowsAffected";


            public const string EE_ExecutionNotYetCompleteError = "EE_ExecutionNotYetCompleteError";


            public const string EE_ScriptError_Error = "EE_ScriptError_Error";


            public const string EE_ScriptError_ParsingSyntax = "EE_ScriptError_ParsingSyntax";


            public const string EE_ScriptError_FatalError = "EE_ScriptError_FatalError";


            public const string EE_ExecutionInfo_FinalizingLoop = "EE_ExecutionInfo_FinalizingLoop";


            public const string EE_ExecutionInfo_QueryCancelledbyUser = "EE_ExecutionInfo_QueryCancelledbyUser";


            public const string EE_BatchExecutionError_Halting = "EE_BatchExecutionError_Halting";


            public const string EE_BatchExecutionError_Ignoring = "EE_BatchExecutionError_Ignoring";


            public const string EE_ExecutionInfo_InitilizingLoop = "EE_ExecutionInfo_InitilizingLoop";


            public const string EE_ExecutionError_CommandNotSupported = "EE_ExecutionError_CommandNotSupported";


            public const string EE_ExecutionError_VariableNotFound = "EE_ExecutionError_VariableNotFound";


            public const string BatchParserWrapperExecutionEngineError = "BatchParserWrapperExecutionEngineError";


            public const string BatchParserWrapperExecutionError = "BatchParserWrapperExecutionError";


            public const string BatchParserWrapperExecutionEngineBatchMessage = "BatchParserWrapperExecutionEngineBatchMessage";


            public const string BatchParserWrapperExecutionEngineBatchResultSetProcessing = "BatchParserWrapperExecutionEngineBatchResultSetProcessing";


            public const string BatchParserWrapperExecutionEngineBatchResultSetFinished = "BatchParserWrapperExecutionEngineBatchResultSetFinished";


            public const string BatchParserWrapperExecutionEngineBatchCancelling = "BatchParserWrapperExecutionEngineBatchCancelling";


            public const string EE_ScriptError_Warning = "EE_ScriptError_Warning";


            public const string TroubleshootingAssistanceMessage = "TroubleshootingAssistanceMessage";


            public const string BatchParser_CircularReference = "BatchParser_CircularReference";


            public const string BatchParser_CommentNotTerminated = "BatchParser_CommentNotTerminated";


            public const string BatchParser_StringNotTerminated = "BatchParser_StringNotTerminated";


            public const string BatchParser_IncorrectSyntax = "BatchParser_IncorrectSyntax";


            public const string BatchParser_VariableNotDefined = "BatchParser_VariableNotDefined";


            public const string TestLocalizationConstant = "TestLocalizationConstant";


            private Keys()
            { }

            public static CultureInfo Culture
            {
                get
                {
                    return _culture;
                }
                set
                {
                    _culture = value;
                }
            }

            public static string GetString(string key)
            {
                return resourceManager.GetString(key, _culture);
            }


            public static string GetString(string key, object arg0)
            {
                return string.Format(global::System.Globalization.CultureInfo.CurrentCulture, resourceManager.GetString(key, _culture), arg0);
            }


            public static string GetString(string key, object arg0, object arg1)
            {
                return string.Format(global::System.Globalization.CultureInfo.CurrentCulture, resourceManager.GetString(key, _culture), arg0, arg1);
            }


            public static string GetString(string key, object arg0, object arg1, object arg2, object arg3)
            {
                return string.Format(global::System.Globalization.CultureInfo.CurrentCulture, resourceManager.GetString(key, _culture), arg0, arg1, arg2, arg3);
            }


            public static string GetString(string key, object arg0, object arg1, object arg2, object arg3, object arg4, object arg5)
            {
                return string.Format(global::System.Globalization.CultureInfo.CurrentCulture, resourceManager.GetString(key, _culture), arg0, arg1, arg2, arg3, arg4, arg5);
            }

        }
    }
}
